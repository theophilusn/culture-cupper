---
import Layout from "@/layouts/Layout.astro";
import TopBar from "@/components/TopBar.astro";
import BannerMessage from "@/components/BannerMessage.astro";
import Footer from "@/components/Footer.astro";
import LayoutSticky from "@/layouts/LayoutSticky.astro";
import Prose from "@/components/Prose.astro";
import { getCollection } from "astro:content";

const eventsCollection = await getCollection("events");
const membersCollection = await getCollection("members");
const teamsCollection = await getCollection("teams");

// Sort events by date (newest first)
const sortedEvents = [...eventsCollection].sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});
---

<Layout title="Events | Culture Cup" description="All Culture Cup Events">
  <TopBar />
  <main>
    <section
      class="mb-16 bg-zu-light-primary dark:bg-zu-dark-primary"
      data-nosnippet
    >
      <div class="wrapper">
        <div class="grid h-[calc(100svh_-_3rem)] min-h-[600px]">
          <div class="self-start">
            <BannerMessage>
              <p>Event Schedule</p>
            </BannerMessage>
          </div>
          <div
            class="self-end pb-20 text-[3.5rem] font-extralight leading-[1.4] text-zu-light-banner-heading sm:text-[5rem] md:text-[6.5rem] lg:text-[8rem] lg:leading-[1.1] xl:text-[9.5rem] dark:text-zu-dark-banner-heading"
          >
            Events<br />
          </div>
        </div>
      </div>
    </section>
    
    <section>
      <div class="wrapper wrapper-divider *:pb-20-alt *:mb-12-alt">
        <Prose>
          <LayoutSticky>
            <div slot="left" class="h-full">
              <h1 class="sticky top-8 text-[1.375rem] font-bold uppercase leading-[48px]">
                / All Events
              </h1>
            </div>
            <div slot="right" class="mt-2.5">
              <div class="space-y-12">
                {sortedEvents.map((event) => {
                  const eventParticipants = membersCollection.filter(member => 
                    event.data.participants.includes(member.slug)
                  );
                  
                  return (
                    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
                      <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                        <div class="flex flex-wrap justify-between items-center">
                          <h2 class="text-2xl font-bold">{event.data.name}</h2>
                          <div class="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full font-medium">
                            {new Date(event.data.date).toLocaleDateString('en-US', {
                              year: 'numeric',
                              month: 'long',
                              day: 'numeric'
                            })}
                          </div>
                        </div>
                        {event.data.description && (
                          <p class="mt-2 text-gray-600 dark:text-gray-400">{event.data.description}</p>
                        )}
                      </div>
                      
                      <div class="p-6 border-b border-gray-200 dark:border-gray-700">
                        <h3 class="text-xl font-bold mb-4">Participants</h3>
                        <div class="flex flex-wrap gap-3">
                          {eventParticipants.map(member => (
                            <div class="flex items-center bg-gray-100 dark:bg-gray-700 px-3 py-2 rounded-full">
                              <div class="w-8 h-8 rounded-full overflow-hidden mr-2">
                                <img src={member.data.image} alt={member.data.name} class="w-full h-full object-cover" />
                              </div>
                              <span>{member.data.name}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                      
                      {event.data.pointsLogs && event.data.pointsLogs.length > 0 && (
                        <div class="p-6">
                          <h3 class="text-xl font-bold mb-4">Points Log</h3>
                          <div class="grid gap-4">
                            {event.data.pointsLogs.map((log: { team: string, isGoodPoints: boolean, points: number, reason: string }) => {
                              const team = teamsCollection.find(t => t.slug === log.team);
                              return (
                                <div class={`p-4 rounded-lg flex items-center justify-between ${
                                  log.isGoodPoints 
                                    ? "bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800" 
                                    : "bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800"
                                }`}>
                                  <div>
                                    <div class="flex items-center">
                                      <span class="font-medium">{team?.data.name || "Unknown Team"}</span>
                                      <span class={`ml-3 px-2 py-1 rounded-full text-sm ${
                                        log.isGoodPoints
                                          ? "bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-200"
                                          : "bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-200"
                                      }`}>
                                        {log.isGoodPoints ? "+" : "-"}{log.points} points
                                      </span>
                                    </div>
                                    <p class="text-gray-600 dark:text-gray-400 mt-1">{log.reason}</p>
                                  </div>
                                  <a href={`/teams/${team?.slug}`} class="text-blue-600 dark:text-blue-400 hover:underline">
                                    View Team
                                  </a>
                                </div>
                              );
                            })}
                          </div>
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            </div>
          </LayoutSticky>
        </Prose>
      </div>
    </section>
  </main>
  <Footer />
</Layout> 